using Bartender.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;

namespace Bartender.Data;

public class AppDbContext(DbContextOptions<AppDbContext> options) : DbContext(options)
{
    public DbSet<Business> Businesses { get; set; }
    public DbSet<Place> Places { get; set; }
    public DbSet<Staff> Staff { get; set; }
    public DbSet<Table> Tables { get; set; }
    public DbSet<MenuItem> MenuItems { get; set; }
    public DbSet<Product> Products { get; set; }
    public DbSet<Order> Orders { get; set; }
    public DbSet<ProductPerOrder> ProductsPerOrders { get; set; }
    public DbSet<Customer> Customers { get; set; }
    public DbSet<Review> Reviews { get; set; }
    public DbSet<ProductCategory> ProductCategory { get; set; }
    public DbSet<GuestSession> GuestSessions { get; set; }
    public DbSet<GuestSessionGroup> GuestSessionGroups { get; set; }


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ProductPerOrder>().HasKey(po => new { po.OrderId, po.MenuItemId });
        modelBuilder.Entity<Review>().HasKey(r => new { r.ProductId, r.CustomerId });

        base.OnModelCreating(modelBuilder);
    }

    // uncomment only when you need to debug RAW SQL generated by EF
    //protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //{
    //    optionsBuilder
    //        .LogTo(Console.WriteLine, LogLevel.Information)
    //        .EnableSensitiveDataLogging();
    //}
}
