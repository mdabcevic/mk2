name: Azure Auto Deploy

on:
  push:
    branches: 
      [ main ]
    paths:
      - '**'
      - '.github/workflows/bartender-deploy.yml'

  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install EF CLI
        run: dotnet tool install --global dotnet-ef

      - name: Add EF to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Build EF Migrations Bundle
        run: |
          dotnet ef migrations bundle \
            --project ./backend/Bartender.Data \
            --startup-project ./backend/BartenderBackend \
            --output migrate \
            --self-contained \
            --runtime linux-x64

      - name: Apply Migrations
        env:
          PRODUCTION_DB_CONNECTION: ${{ secrets.BARTENDER_PRODUCTION_CONNECTION_STRING }}
          JWT__KEY: ${{ secrets.JWT_KEY }}
          JWT__ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT__AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
          REDIS__HOST: ${{ secrets.REDIS__HOST }}
          REDIS__PORT: ${{ secrets.REDIS__PORT }}
          REDIS__PASSWORD: ${{ secrets.REDIS__PASSWORD }}
        run: |
          chmod +x ./migrate
          ./migrate --connection "$PRODUCTION_DB_CONNECTION"

  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.BARTENDER_REGISTRY_PASSWORD }}" | docker login ghcr.io -u ${{ secrets.BARTENDER_REGISTRY_USERNAME }} --password-stdin

      - name: Build backend Docker image
        run: docker build -t ghcr.io/${{ secrets.BARTENDER_REGISTRY_USERNAME }}/backend:latest ./backend

      - name: Push backend Docker image
        run: docker push ghcr.io/${{ secrets.BARTENDER_REGISTRY_USERNAME }}/backend:latest

      - name: Build frontend Docker image
        run: docker build -t ghcr.io/${{ secrets.BARTENDER_REGISTRY_USERNAME }}/frontend:latest ./frontend --build-arg VITE_API_BASE_URL=https://bartender-service.jollywater-cb9f5de7.germanywestcentral.azurecontainerapps.io/ --build-arg VITE_SIGNALR_HUB_URL=https://bartender-service.jollywater-cb9f5de7.germanywestcentral.azurecontainerapps.io/ --build-arg VITE_FRONTEND_QR_URL=https://bartender.jollywater-cb9f5de7.germanywestcentral.azurecontainerapps.io/table-lookup/{placeId}/{salt}

      - name: Push frontend Docker image
        run: docker push ghcr.io/${{ secrets.BARTENDER_REGISTRY_USERNAME }}/frontend:latest 

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.BARTENDER_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.BARTENDER_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.BARTENDER_AZURE_SUBSCRIPTION_ID }}

      - name: Deploy backend image to Azure Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name bartender-service \
              --resource-group bartender-app \
              --image ghcr.io/${{ secrets.BARTENDER_REGISTRY_USERNAME }}/backend:latest 

      - name: Deploy frontend image to Azure Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name bartender \
              --resource-group bartender-app \
              --image ghcr.io/${{ secrets.BARTENDER_REGISTRY_USERNAME }}/frontend:latest